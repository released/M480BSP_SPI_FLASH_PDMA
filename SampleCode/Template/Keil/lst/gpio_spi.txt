; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gpio_spi.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\gpio_spi.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\M480\Include -I..\..\..\Library\StdDriver\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=526 --omf_browse=.\obj\gpio_spi.crf ..\gpio_spi.c]
                          THUMB

                          AREA ||i.CLK_High||, CODE, READONLY, ALIGN=2

                  CLK_High PROC
;;;55     
;;;56     int CLK_High(void)
000000  4902              LDR      r1,|L1.12|
;;;57     {
;;;58     
;;;59         PD1 = 1;
000002  2001              MOVS     r0,#1
000004  6008              STR      r0,[r1,#0]
;;;60     
;;;61         return 0;
000006  2000              MOVS     r0,#0
;;;62     }
000008  4770              BX       lr
;;;63     
                          ENDP

00000a  0000              DCW      0x0000
                  |L1.12|
                          DCD      0x400048c4

                          AREA ||i.CLK_Low||, CODE, READONLY, ALIGN=2

                  CLK_Low PROC
;;;48     
;;;49     int CLK_Low(void)
000000  4901              LDR      r1,|L2.8|
;;;50     {
;;;51         PD1 = 0;
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]
;;;52     
;;;53         return 0;
;;;54     }
000006  4770              BX       lr
;;;55     
                          ENDP

                  |L2.8|
                          DCD      0x400048c4

                          AREA ||i.CS_High||, CODE, READONLY, ALIGN=2

                  CS_High PROC
;;;41     
;;;42     int CS_High(void)
000000  4902              LDR      r1,|L3.12|
;;;43     {
;;;44         PD0 = 1;
000002  2001              MOVS     r0,#1
000004  6008              STR      r0,[r1,#0]
;;;45     
;;;46         return 0;
000006  2000              MOVS     r0,#0
;;;47     }
000008  4770              BX       lr
;;;48     
                          ENDP

00000a  0000              DCW      0x0000
                  |L3.12|
                          DCD      0x400048c0

                          AREA ||i.CS_Low||, CODE, READONLY, ALIGN=2

                  CS_Low PROC
;;;34     
;;;35     int CS_Low(void)
000000  4901              LDR      r1,|L4.8|
;;;36     {
;;;37         PD0 = 0;
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]
;;;38     
;;;39         return 0;
;;;40     }
000006  4770              BX       lr
;;;41     
                          ENDP

                  |L4.8|
                          DCD      0x400048c0

                          AREA ||i.GPIO_SPI_Init||, CODE, READONLY, ALIGN=2

                  GPIO_SPI_Init PROC
;;;20     
;;;21     void GPIO_SPI_Init(void)
000000  b510              PUSH     {r4,lr}
;;;22     {
;;;23         /* Use PD0/1/2/3 to emulate SPI CS/CLK/DO/DI */
;;;24         GPIO_SetMode(PD, BIT0, GPIO_MODE_OUTPUT);
000002  4c0f              LDR      r4,|L5.64|
000004  2201              MOVS     r2,#1
000006  4611              MOV      r1,r2
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       GPIO_SetMode
;;;25         GPIO_SetMode(PD, BIT1, GPIO_MODE_OUTPUT);
00000e  2201              MOVS     r2,#1
000010  2102              MOVS     r1,#2
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       GPIO_SetMode
;;;26         GPIO_SetMode(PD, BIT2, GPIO_MODE_OUTPUT);
000018  2201              MOVS     r2,#1
00001a  2104              MOVS     r1,#4
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       GPIO_SetMode
;;;27         GPIO_SetMode(PD, BIT3, GPIO_MODE_INPUT);
000022  2200              MOVS     r2,#0
000024  2108              MOVS     r1,#8
000026  4620              MOV      r0,r4
000028  f7fffffe          BL       GPIO_SetMode
;;;28     
;;;29         /* Init PD0/1/2 output */
;;;30         PD0 = 1;
00002c  4905              LDR      r1,|L5.68|
00002e  2001              MOVS     r0,#1
000030  6008              STR      r0,[r1,#0]
;;;31         PD1 = 0;
000032  2000              MOVS     r0,#0
000034  1d09              ADDS     r1,r1,#4
000036  6008              STR      r0,[r1,#0]
;;;32         PD2 = 0;
000038  1d09              ADDS     r1,r1,#4
00003a  6008              STR      r0,[r1,#0]
;;;33     }
00003c  bd10              POP      {r4,pc}
;;;34     
                          ENDP

00003e  0000              DCW      0x0000
                  |L5.64|
                          DCD      0x400040c0
                  |L5.68|
                          DCD      0x400048c0

                          AREA ||i.Read_SPI||, CODE, READONLY, ALIGN=2

                  Read_SPI PROC
;;;134    
;;;135    int Read_SPI(uint8_t bNumOfByte, uint8_t *pbData)
000000  b5f0              PUSH     {r4-r7,lr}
;;;136    {
;;;137    
;;;138        uint8_t i;
;;;139        uint8_t bBitSet;
;;;140        uint8_t bByte;
;;;141    
;;;142        for (i = 0; i < bNumOfByte ; i++)
000002  2500              MOVS     r5,#0
000004  e017              B        |L6.54|
                  |L6.6|
;;;143        {
;;;144            bBitSet = 0x80;
;;;145            bByte = 0;
000006  2300              MOVS     r3,#0
000008  4c0d              LDR      r4,|L6.64|
00000a  2280              MOVS     r2,#0x80              ;144
00000c  f8dfe030          LDR      lr,|L6.64|
;;;146    
;;;147            do
;;;148            {
;;;149                if (_GPIO_ReadBit(1))
000010  2701              MOVS     r7,#1
000012  469c              MOV      r12,r3
000014  3c08              SUBS     r4,r4,#8
                  |L6.22|
000016  f8de6000          LDR      r6,[lr,#0]
00001a  f8c4c000          STR      r12,[r4,#0]
00001e  6027              STR      r7,[r4,#0]
000020  6027              STR      r7,[r4,#0]
000022  f8c4c000          STR      r12,[r4,#0]
000026  b106              CBZ      r6,|L6.42|
;;;150                    bByte |= bBitSet;
000028  4313              ORRS     r3,r3,r2
                  |L6.42|
;;;151    
;;;152                bBitSet = bBitSet >> 1;
00002a  0852              LSRS     r2,r2,#1
;;;153            } while (bBitSet);
00002c  d1f3              BNE      |L6.22|
;;;154    
;;;155            *pbData = bByte;
00002e  1c6d              ADDS     r5,r5,#1
000030  f8013b01          STRB     r3,[r1],#1
000034  b2ed              UXTB     r5,r5                 ;142
                  |L6.54|
000036  4285              CMP      r5,r0                 ;142
000038  d3e5              BCC      |L6.6|
;;;156            pbData++;
;;;157        }
;;;158    
;;;159        return 0;
00003a  2000              MOVS     r0,#0
;;;160    }
00003c  bdf0              POP      {r4-r7,pc}
;;;161    
                          ENDP

00003e  0000              DCW      0x0000
                  |L6.64|
                          DCD      0x400048cc

                          AREA ||i.Write_SPI||, CODE, READONLY, ALIGN=2

                  Write_SPI PROC
;;;110    
;;;111    int Write_SPI(uint8_t bNumOfByte, uint8_t *pbData)
000000  b5f0              PUSH     {r4-r7,lr}
;;;112    {
;;;113    
;;;114        uint8_t bCMP;
;;;115        uint8_t i;
;;;116    
;;;117        for (i = 0; i < bNumOfByte ; i++)
000002  2300              MOVS     r3,#0
000004  4f0c              LDR      r7,|L7.56|
;;;118        {
;;;119            bCMP = 0x80;
;;;120    
;;;121            do
;;;122            {
;;;123                if (*(pbData + i) & bCMP)
;;;124                    _GPIO_SetBit(1);
000006  2601              MOVS     r6,#1
000008  461d              MOV      r5,r3
00000a  1f3c              SUBS     r4,r7,#4
00000c  e010              B        |L7.48|
                  |L7.14|
00000e  2280              MOVS     r2,#0x80              ;119
                  |L7.16|
000010  f811c003          LDRB     r12,[r1,r3]           ;123
000014  ea1c0f02          TST      r12,r2                ;123
000018  d001              BEQ      |L7.30|
00001a  603e              STR      r6,[r7,#0]            ;123
00001c  e000              B        |L7.32|
                  |L7.30|
00001e  603d              STR      r5,[r7,#0]            ;123
                  |L7.32|
000020  6025              STR      r5,[r4,#0]            ;123
000022  6026              STR      r6,[r4,#0]            ;123
000024  6026              STR      r6,[r4,#0]            ;123
000026  6025              STR      r5,[r4,#0]            ;123
;;;125                else
;;;126                    _GPIO_ClrBit(1);
;;;127    
;;;128                bCMP = bCMP >> 1;
000028  0852              LSRS     r2,r2,#1
00002a  d1f1              BNE      |L7.16|
00002c  1c5b              ADDS     r3,r3,#1
00002e  b2db              UXTB     r3,r3                 ;117
                  |L7.48|
000030  4283              CMP      r3,r0                 ;117
000032  d3ec              BCC      |L7.14|
;;;129            } while (bCMP);
;;;130        }
;;;131    
;;;132        return 0;
000034  2000              MOVS     r0,#0
;;;133    }
000036  bdf0              POP      {r4-r7,pc}
;;;134    
                          ENDP

                  |L7.56|
                          DCD      0x400048c8

;*** Start embedded assembler ***

#line 1 "..\\gpio_spi.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_gpio_spi_c_b1c4f4e7____REV16|
#line 388 "..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___10_gpio_spi_c_b1c4f4e7____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_gpio_spi_c_b1c4f4e7____REVSH|
#line 402
|__asm___10_gpio_spi_c_b1c4f4e7____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_gpio_spi_c_b1c4f4e7____RRX|
#line 587
|__asm___10_gpio_spi_c_b1c4f4e7____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
